<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tk.fulsun.order.dao.TSeckillProductMapper">
  <resultMap id="BaseResultMap" type="tk.fulsun.order.dao.dataobject.TSeckillProduct">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
    <result column="gmt_update" jdbcType="TIMESTAMP" property="gmtUpdate"/>
    <result column="prod_id" jdbcType="VARCHAR" property="prodId"/>
    <result column="prod_name" jdbcType="VARCHAR" property="prodName"/>
    <result column="prod_status" jdbcType="INTEGER" property="prodStatus"/>
    <result column="prod_stock" jdbcType="INTEGER" property="prodStock"/>
    <result column="prod_price" jdbcType="DECIMAL" property="prodPrice"/>
    <result column="version" jdbcType="INTEGER" property="version"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="("
                    separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="("
                    separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_update, prod_id, prod_name, prod_status, prod_stock, prod_price,
    version
  </sql>
  <select id="selectByExample" parameterType="tk.fulsun.order.dao.dataobject.TSeckillProductExample"
    resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from t_seckill_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_seckill_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_seckill_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample"
    parameterType="tk.fulsun.order.dao.dataobject.TSeckillProductExample">
    delete from t_seckill_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="tk.fulsun.order.dao.dataobject.TSeckillProduct">
    insert into t_seckill_product (id, gmt_create, gmt_update,
    prod_id, prod_name, prod_status,
    prod_stock, prod_price, version
    )
    values (#{id,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP},
    #{gmtUpdate,jdbcType=TIMESTAMP},
    #{prodId,jdbcType=VARCHAR}, #{prodName,jdbcType=VARCHAR}, #{prodStatus,jdbcType=INTEGER},
    #{prodStock,jdbcType=INTEGER}, #{prodPrice,jdbcType=DECIMAL}, #{version,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="tk.fulsun.order.dao.dataobject.TSeckillProduct">
    insert into t_seckill_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtUpdate != null">
        gmt_update,
      </if>
      <if test="prodId != null">
        prod_id,
      </if>
      <if test="prodName != null">
        prod_name,
      </if>
      <if test="prodStatus != null">
        prod_status,
      </if>
      <if test="prodStock != null">
        prod_stock,
      </if>
      <if test="prodPrice != null">
        prod_price,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="prodId != null">
        #{prodId,jdbcType=VARCHAR},
      </if>
      <if test="prodName != null">
        #{prodName,jdbcType=VARCHAR},
      </if>
      <if test="prodStatus != null">
        #{prodStatus,jdbcType=INTEGER},
      </if>
      <if test="prodStock != null">
        #{prodStock,jdbcType=INTEGER},
      </if>
      <if test="prodPrice != null">
        #{prodPrice,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tk.fulsun.order.dao.dataobject.TSeckillProductExample"
    resultType="java.lang.Long">
    select count(*) from t_seckill_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_seckill_product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpdate != null">
        gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.prodId != null">
        prod_id = #{record.prodId,jdbcType=VARCHAR},
      </if>
      <if test="record.prodName != null">
        prod_name = #{record.prodName,jdbcType=VARCHAR},
      </if>
      <if test="record.prodStatus != null">
        prod_status = #{record.prodStatus,jdbcType=INTEGER},
      </if>
      <if test="record.prodStock != null">
        prod_stock = #{record.prodStock,jdbcType=INTEGER},
      </if>
      <if test="record.prodPrice != null">
        prod_price = #{record.prodPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_seckill_product
    set id = #{record.id,jdbcType=INTEGER},
    gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
    gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
    prod_id = #{record.prodId,jdbcType=VARCHAR},
    prod_name = #{record.prodName,jdbcType=VARCHAR},
    prod_status = #{record.prodStatus,jdbcType=INTEGER},
    prod_stock = #{record.prodStock,jdbcType=INTEGER},
    prod_price = #{record.prodPrice,jdbcType=DECIMAL},
    version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective"
    parameterType="tk.fulsun.order.dao.dataobject.TSeckillProduct">
    update t_seckill_product
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="prodId != null">
        prod_id = #{prodId,jdbcType=VARCHAR},
      </if>
      <if test="prodName != null">
        prod_name = #{prodName,jdbcType=VARCHAR},
      </if>
      <if test="prodStatus != null">
        prod_status = #{prodStatus,jdbcType=INTEGER},
      </if>
      <if test="prodStock != null">
        prod_stock = #{prodStock,jdbcType=INTEGER},
      </if>
      <if test="prodPrice != null">
        prod_price = #{prodPrice,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="tk.fulsun.order.dao.dataobject.TSeckillProduct">
    update t_seckill_product
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
    gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
    prod_id = #{prodId,jdbcType=VARCHAR},
    prod_name = #{prodName,jdbcType=VARCHAR},
    prod_status = #{prodStatus,jdbcType=INTEGER},
    prod_stock = #{prodStock,jdbcType=INTEGER},
    prod_price = #{prodPrice,jdbcType=DECIMAL},
    version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>